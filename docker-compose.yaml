version: '3.5'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        XDEBUG: "true"
        UID: 1000
        GID: 1000
    container_name: app
    restart: unless-stopped
    environment:
      PHP_IDE_CONFIG: "serverName=lending"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    tty: true
    env_file:
      - ./src/.env
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    networks:
      - app-network
    depends_on:
      - redis
      - mailhog
      - rabbitmq
      - db

  # Обработчик для стандартной очереди событий
#  queues:
#    build:
#      context: .
#      dockerfile: docker/php/Dockerfile
#      args:
#        XDEBUG: "true"
#        UID: 1000
#        GID: 1000
#    command: /var/www/scripts/queue.sh
#    container_name: queues
#    restart: unless-stopped
#    environment:
#      PHP_IDE_CONFIG: "serverName=lending"
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
#    tty: true
#    env_file:
#      - ./src/.env
#    working_dir: /var/www
#    volumes:
#      - ./src:/var/www
#    networks:
#      - app-network
#    depends_on:
#      - redis
#      - mailhog
#      - rabbitmq
#      - db

  #Nginx Service
  webserver:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      args:
        UID: 1000
        GID: 1000
    container_name: webserver
    restart: unless-stopped
    tty: true
    volumes:
      - ./src:/var/www
      - ./nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
    depends_on:
      - app

  redis:
    image: "redis:alpine"
    hostname: redis
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - app-network

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=cache:redis:6379:0,default:redis:6379:1,sessions:redis:6379:2
    ports:
      - "8081:8081"
    networks:
      - app-network
    depends_on:
      - redis

  db:
    image: postgres
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    ports:
      - "5432:5432"
    networks:
      app-network:
        aliases:
          - db
    volumes:
      - "lending-db:/var/lib/postgresql/data"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "rabbit"
      RABBITMQ_DEFAULT_PASS: "rabbit"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "8003:1025"
      - "8100:8025"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.33.0.0/16
          gateway: 172.33.0.1

volumes:
  lending-db:
